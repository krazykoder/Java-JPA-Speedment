package com.company.userdb.userdb.userdb.user.generated;

import com.company.userdb.userdb.userdb.user.User;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.userdb.userdb.userdb.user.User}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserImpl implements User {
    
    private int id;
    private String username;
    private String firstName;
    private String lastName;
    private String email;
    private String password;
    
    protected GeneratedUserImpl() {}
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getUsername() {
        return username;
    }
    
    @Override
    public Optional<String> getFirstName() {
        return Optional.ofNullable(firstName);
    }
    
    @Override
    public Optional<String> getLastName() {
        return Optional.ofNullable(lastName);
    }
    
    @Override
    public String getEmail() {
        return email;
    }
    
    @Override
    public String getPassword() {
        return password;
    }
    
    @Override
    public User setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public User setUsername(String username) {
        this.username = username;
        return this;
    }
    
    @Override
    public User setFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    @Override
    public User setLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    @Override
    public User setEmail(String email) {
        this.email = email;
        return this;
    }
    
    @Override
    public User setPassword(String password) {
        this.password = password;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "        + Objects.toString(getId()));
        sj.add("username = "  + Objects.toString(getUsername()));
        sj.add("firstName = " + Objects.toString(OptionalUtil.unwrap(getFirstName())));
        sj.add("lastName = "  + Objects.toString(OptionalUtil.unwrap(getLastName())));
        sj.add("email = "     + Objects.toString(getEmail()));
        sj.add("password = "  + Objects.toString(getPassword()));
        return "UserImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof User)) { return false; }
        final User thatUser = (User)that;
        if (this.getId() != thatUser.getId()) { return false; }
        if (!Objects.equals(this.getUsername(), thatUser.getUsername())) { return false; }
        if (!Objects.equals(this.getFirstName(), thatUser.getFirstName())) { return false; }
        if (!Objects.equals(this.getLastName(), thatUser.getLastName())) { return false; }
        if (!Objects.equals(this.getEmail(), thatUser.getEmail())) { return false; }
        if (!Objects.equals(this.getPassword(), thatUser.getPassword())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getUsername());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getFirstName()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getLastName()));
        hash = 31 * hash + Objects.hashCode(getEmail());
        hash = 31 * hash + Objects.hashCode(getPassword());
        return hash;
    }
}